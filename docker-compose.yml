version: '3.9'
services:
  db:
    image: postgres:16.1-alpine
    ports:
      - ${PORT_DB}:5432
    environment:
      TZ: 'Asia/Qyzylorda'
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - ./db/data:/var/lib/postgresql/data
      #- ./create.sql:/docker-entrypoint-initdb.d/create_tables.sql

  redis:
    image: redis:7.2.4
    # command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    command: redis-server --maxmemory 1GB --maxmemory-policy volatile-lru --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      TZ: 'Asia/Qyzylorda'
      REDIS_PASSWORD : ${REDIS_PASSWORD}
    volumes:
      - ./cache/:/data
    ports:
      - ${REDISPORT_EXTERNAL}:6379

  prometheus:
    image: prom/prometheus:v2.51.2
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    environment:
      TZ: 'Asia/Qyzylorda'
      PROMETHEUS_PORT_EXTERNAL : ${PROMETHEUS_PORT_EXTERNAL}      
    ports:
      - ${PROMETHEUS_PORT_EXTERNAL}:9090      

  back:
    image: node:20.11.1
    command: bash -c "npm install && npm run migrate:dev && npm run watch"
    depends_on:
      - 'db'
      - 'redis'
    working_dir: /app
    volumes:
      - ./back/:/app
    ports:
      - ${EXPRESS_PORT_EXTERNAL}:${EXPRESS_PORT}
      - ${EMAIL_PORT}:${EMAIL_PORT}
    environment:
      TZ: 'Asia/Qyzylorda'
      EXPRESS_PORT_EXTERNAL: ${EXPRESS_PORT_EXTERNAL}
      EXPRESS_PORT: ${EXPRESS_PORT}
      FRONT_URL: ${FRONT_URL}
      DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}?schema=public

      REDIS_PASSWORD : ${REDIS_PASSWORD}

      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_SECURE: ${EMAIL_SECURE}
      
      SMSC_HOST: ${SMSC_HOST}
      SMSC_USER: ${SMSC_USER}
      SMSC_PASS: ${SMSC_PASS}

volumes:
  prometheus_data: {}